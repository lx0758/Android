apply plugin: 'com.android.library'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String
    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode getLibraryVersionCode()
        versionName getLibraryVersionName()
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules-aar.txt'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.squareup.okhttp3:okhttp:3.12.6'
    api ('com.squareup.retrofit2:retrofit:2.7.0', {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    })
    api("com.squareup.retrofit2:adapter-rxjava2:2.7.0", {
        exclude group: 'com.squareup.retrofit2', module: 'retrofit'
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
    })
    // noinspection GradleDependency
    api 'com.alibaba:fastjson:1.1.71.android'
    api 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    compileOnly 'androidx.annotation:annotation:1.0.0'
}

apply from: '../release.gradle'
static def getLibraryArtifactId() {
    return 'http'
}
static def getLibraryVersionName() {
    return '0.2.1'
}
static def getLibraryVersionCode() {
    def version = getLibraryVersionName().replace("-SNAPSHOT", "")
    def versions = version.split("\\.")
    return Integer.parseInt(versions[0]) * 10000 + Integer.parseInt(versions[1]) * 100 + Integer.parseInt(versions[2]) * 1
}