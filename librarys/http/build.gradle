plugins {
    id 'com.android.library'
}

android {
    compileSdk COMPILE_SDK as int
    buildToolsVersion BUILD_TOOLS
    defaultConfig {
        minSdk MIN_SDK as int
        targetSdk TARGET_SDK as int
    }
    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules-aar.txt'
        }
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleDependency
    api 'com.squareup.okhttp3:okhttp:3.12.13'
    api ('com.squareup.retrofit2:retrofit:2.9.0', {
        exclude group: 'com.squareup.okhttp3'
    })
    api("com.squareup.retrofit2:adapter-rxjava3:2.9.0", {
        exclude group: 'com.squareup.retrofit2'
        exclude group: 'io.reactivex.rxjava3'
        exclude group: 'org.reactivestreams'
    })
    api("com.squareup.retrofit2:converter-jackson:2.9.0", {
        exclude group: 'com.squareup.retrofit2'
        exclude group: 'com.fasterxml.jackson.core', module: "jackson-core"
    })
    api("com.fasterxml.jackson.core:jackson-core:2.12.2")
    compileOnly 'androidx.annotation:annotation:1.2.0'
}

apply from: '../release.gradle'
static def getLibraryArtifactId() {
    return 'http'
}
static def getLibraryVersionName() {
    return '0.2.22'
}
static def getLibraryVersionCode() {
    def version = getLibraryVersionName().replace("-SNAPSHOT", "")
    def versions = version.split("\\.")
    return Integer.parseInt(versions[0]) * 10000 + Integer.parseInt(versions[1]) * 100 + Integer.parseInt(versions[2]) * 1
}