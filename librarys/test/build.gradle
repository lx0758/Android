plugins {
    id 'com.android.library'
}

android {
    compileSdk COMPILE_SDK as int
    buildToolsVersion BUILD_TOOLS
    defaultConfig {
        minSdk MIN_SDK as int
        targetSdk TARGET_SDK as int
    }
    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules-aar.txt'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            // http://robolectric.org/configuring/#system-properties
            systemProperty 'robolectric.dependency.repo.id', 'central'
            systemProperty 'robolectric.dependency.repo.url', 'https://repo1.maven.org/maven2/'
            systemProperty 'robolectric.dependency.repo.username', ''
            systemProperty 'robolectric.dependency.repo.password', ''
            systemProperty 'robolectric.dependency.proxy.host', project.findProperty("systemProp.https.proxyHost") ?: System.getenv("ROBOLECTRIC_PROXY_HOST")
            systemProperty 'robolectric.dependency.proxy.port', project.findProperty("systemProp.https.proxyPort") ?: System.getenv("ROBOLECTRIC_PROXY_PORT")
        }
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
    namespace 'com.liux.android.test'
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api 'junit:junit:4.13.2'
    api 'androidx.test:core:1.5.0'
    api "org.robolectric:robolectric:4.12"
    api 'org.mockito:mockito-core:5.11.0'
}

apply from: '../release.gradle'
static def getLibraryArtifactId() {
    return 'test'
}
static def getLibraryVersionName() {
    return '0.1.3'
}
static def getLibraryVersionCode() {
    def version = getLibraryVersionName().replace("-SNAPSHOT", "")
    def versions = version.split("\\.")
    return Integer.parseInt(versions[0]) * 10000 + Integer.parseInt(versions[1]) * 100 + Integer.parseInt(versions[2]) * 1
}